<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="curve.OcxState" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACFTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5BeEhvc3QrU3RhdGUBAAAABERhdGEHAgIAAAAJAwAAAA8DAAAA5AUAAAIB
        AAAAAQAAAAAmAAAAezY3OUYzQjMxLTIzMkYtMTFEMy1CNDYxLTAwQTAyNEJFQzU5Rn0AAAAAqQUAAAH6
        UhQBAAAAAQQAAElJY3YSAAMAgAEGgRABBYAEBIAWCJRRAgAAnQEAABUAAgDjBwcABAAIACBDgvb//wSI
        CgAAoAUAAKAFAogKAAClAgAAfQEEgQFgfwKAAgaB0AcFttzc3ADl5eUAn5+fAPf39wCoqKgAy8vLAAA3
        gABaWloA5eXlAFpaWgCWlpYA9/f3AABGhwDl5eVBnUaHANoARgD/oEsAS3D/AADA/wAAwFAA/wD/AGDt
        kAWDgIAA/wKAgAKugICAAIAAgAAAgAAA///gAP+wsAA/AEwA0LD/AP+QAADQ/68A0OUZAMAARQCoqKgk
        gBgWg/T///8LgZABBICGA4hTaW1TdW4AAAICl4gu9WG0zq8E+zOtYehBAABgQQAA9P///wuBkAEEgIYD
        h1NpbVN1bgBhA4PVza8EA4AKAoABAodFzq8E9P///wuBkAEEgIYDh1NpbVN1bgBhA4PVza8EA4AKAoAB
        AoRFzq8EWgKAWgKAWn8Wov///wD///8AWlpaAFpaWgDLy8sA5eXlAAA3gABaWloA////ApCAAFpaWgBa
        WloAAEaHAP///0GdRocA2gBGAADA/wD/AP8AAHD/ABGAAAD/YAAAS/+QBYeAgAD/ADsAgAKdgICAAIAA
        gAAATAcA/OkAAP+wsAA/AEwA0LD/AP+wAo3/wADf5RkAwABFALm5uSCAAQKAGBaD9P///wuBkAEEgIYD
        h1NpbVN1bgBhA4PVza8EA4AKAoABAodFzq8E9P///wuBkAEEgIYDh1NpbVN1bgBhA4PVza8EA4AKAoAB
        AodFzq8E9P///wuBkAEEgIYDh1NpbVN1bgBhA4PVza8EA4AKAoABAoRFzq8EWgKAWgKAWn8WmP//////
        ////6AMAAOgDAAD//////////wMCgAUCgAECgAECgAECgFoCg/T///8LgZABBICGA45TaW1TdW4AZEZp
        bGVPcHQIiHjurGEoz68EHgKAFH9/GoDIAoQsAQAARgKD9////wuBkAEEgIYDllNpbVN1bgAAU2ltU3Vu
        AGRGaWxlT3B0f380gAMGgUAzBYFgHAmAARCB8D8/gAF/f39/f39/f39/f39/f39/f39/f39/f39/f39/
        f39/f39/f39/f39/f39/f39/f39/f39/NoABDoABXoABf39WgAF/f2aAARqAAhqAARqAAhqAARqAAhqA
        An9/f39/f39/f39/f39/ZpEBAQEBAQEBAQEBAQEBAQEBAQEIgwEBAQFEgBB/f1ILgAF/f38SgBICgAoC
        gBkCgAp/f39/f39/I4AQKYAaGIHwPxuAB39/f3KAAwKM/v////7////+////QAKD/v///39/f39/d4AC
        AoABf3KABAeAAgV/f39/Sj0AAK8qAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAs=
</value>
  </data>
</root>